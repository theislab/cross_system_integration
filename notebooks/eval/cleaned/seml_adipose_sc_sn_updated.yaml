seml:
  executable: /home/moinfar/projects/cross_system_integration/notebooks/eval/cleaned/run_integration_seml.py
  name: csi_eval
  output_dir: /home/moinfar/io/csi/eval/adipose_sc_sn_updated/logs # CHANGE! OUT!
  project_root_dir:  /home/moinfar/projects/cross_system_integration/notebooks/eval/cleaned
  conda_environment: csi
  
slurm:
  max_simultaneous_jobs: 10
  sbatch_options_template: GPU
  sbatch_options:
    mem: 60G          
    cpus-per-task: 4  
    time: 0-12:00     
    nice: 10000

fixed:
  path_save: /home/moinfar/io/csi/eval/adipose_sc_sn_updated/ # CHANGE! OUT!
  max_epochs: 110
  epochs_detail_plot: 40
  # Model params
  system_decoders: 0
  # Task
  eval_type: integration
  # Data
  path_adata: /om2/user/khrovati/data/cross_system_integration/adipose_sc_sn_updated/adiposeHsSAT_sc_sn.h5ad
  fn_moransi: /om2/user/khrovati/data/cross_system_integration/adipose_sc_sn_updated/adiposeHsSAT_sc_sn_moransiGenes.pkl
  group_key: cluster
  batch_key: donor_id
  system_key: system
  n_cells_eval: 100000
  conda_env: csi
  pca_key: X_pca_system
       
  
grid:
  seed_num:
    type: choice
    options:
      - 1
      - 2
      - 3 
      
klw_opt:
    fixed:
      params_opt: kl_weight
    grid:
      kl_weight:
        type: choice
        options:
          - 1
          - 1.5
          - 2
          - 5

vamp_opt_eval:
    fixed:
      params_opt: vamp_eval
      prior: vamp
      encode_pseudoinputs_on_eval_mode: 1
    grid:
      n_prior_components:
        type: choice
        options:
          - 1
          - 2
          - 5
          - 10
          - 100
          - 5000

vamp_opt_eval_fixed:
    fixed:
      params_opt: vamp_eval_fixed
      prior: vamp
      encode_pseudoinputs_on_eval_mode: 1
      trainable_priors: 0
    grid:
      n_prior_components:
        type: choice
        options:
          - 1
          - 2
          - 5
          - 10
          - 100
          - 5000

gmm_opt_eval:
    fixed:
      params_opt: gmm_eval
      prior: gmm
      encode_pseudoinputs_on_eval_mode: 1 # not needed
    grid:
      n_prior_components:
        type: choice
        options:
          - 1
          - 2
          - 5
          - 10
          - 100
          - 5000

gmm_opt_eval_fixed:
    fixed:
      params_opt: gmm_eval_fixed
      prior: gmm
      trainable_priors: 0
    grid:
      n_prior_components:
        type: choice
        options:
          - 1
          - 2
          - 5
          - 10
          - 100
          - 5000

gmm_opt_eval_ri:
    fixed:
      params_opt: gmm_eval_ri
      prior: gmm
      pseudoinputs_data_init: 0
    grid:
      n_prior_components:
        type: choice
        options:
          - 1
          - 2
          - 5
          - 10
          - 100
          - 5000

gmm_opt_eval_ri_fixed:
    fixed:
      params_opt: gmm_eval_ri_fixed
      prior: gmm
      trainable_priors: 0
      pseudoinputs_data_init: 0
    grid:
      n_prior_components:
        type: choice
        options:
          - 1
          - 2
          - 5
          - 10
          - 100
          - 5000

zdcw_opt_std:
    fixed:
      z_dist_metric: MSE_standard 
      params_opt: z_distance_cycle_weight_std
    grid:
      z_distance_cycle_weight:
        type: choice
        options:
          - 2
          - 5 
          - 10
          - 50  

vamp_eval_zdcw_opt_std:
    fixed:
      z_dist_metric: MSE_standard 
      prior: vamp
      n_prior_components: 5
      encode_pseudoinputs_on_eval_mode: 1
      params_opt: vamp_z_distance_cycle_weight_std_eval
    grid:
      z_distance_cycle_weight:
        type: choice
        options:
          - 2
          - 5 
          - 10
          - 50  

vamp_klw_opt_eval:
    fixed:
      prior: vamp
      n_prior_components: 5
      encode_pseudoinputs_on_eval_mode: 1
      params_opt: vamp_kl_weight_eval
    grid:
      kl_weight:
        type: choice
        options:
          - 1
          - 1.5
          - 2
          - 5   

scvi_kl_anneal:
    fixed:
      model: scvi
      params_opt: scvi_kl_anneal
      use_n_steps_kl_warmup: 1
    grid:
      kl_weight:
        type: choice
        options:
          - 0.5
          - 1
          - 1.5
          - 2

scglue_rgw:
    fixed:
      model: scglue
      conda_env: scglue
      params_opt: scglue_rel_gene_weight
      max_epochs: -1
    grid:
      rel_gene_weight:
        type: choice
        options:
          - 0.4
          - 0.6 
          - 0.8
          - 1       

scglue_la:
    fixed:
      model: scglue
      conda_env: scglue
      params_opt: scglue_lam_align
      max_epochs: -1
    grid:
      lam_align:
        type: choice
        options:
          - 0.0005
          - 0.005
          - 0.05
          - 0.5

scglue_lg:
    fixed:
      model: scglue
      conda_env: scglue
      params_opt: scglue_lam_graph
      max_epochs: -1
    grid:
      lam_graph:
        type: choice
        options:
          - 0.005
          - 0.1
          - 0.5
          - 2

scgen:
    fixed:
      model: scgen
      params_opt: scgen_kl
      conda_env: perturb
    grid:
      kl_weight:
        type: choice
        options:
          - 0.1

scgen_sample:
    fixed:
      model: scgen
      params_opt: scgen_sample_kl
      conda_env: perturb
      integrate_by: batch
    grid:
      kl_weight:
        type: choice
        options:
          - 0.1

seurat_cca:
    fixed:
      model: seurat
      params_opt: seurat_cca_k_anchor
      conda_env: NA
      reduction: cca
      k_weight: 50  # We have to enforce this since one batch is small
      language: R
    grid:
      k_anchor:
        type: choice
        options:
          - 2
          - 5
          - 10
          - 20
          - 50

seurat_rpca:
    fixed:
      model: seurat
      params_opt: seurat_rpca_k_anchor
      conda_env: NA
      reduction: rpca
      k_weight: 35  # We have to enforce this since one batch is small
      language: R
    grid:
      k_anchor:
        type: choice
        options:
          - 2
          - 5
          - 10
          - 20
          - 50

harmony:
    fixed:
      model: harmonypy
      params_opt: harmony_theta
      conda_env: csi
    grid:
      harmony_theta:
        type: choice
        options:
          - 0.1
          - 1.0
          - 5.0
          - 10.0
          - 100.0

harmonyr:
    fixed:
      model: harmony
      params_opt: harmony_theta
      conda_env: NA
      reduction: harmony
      language: R
    grid:
      harmony_theta:
        type: choice
        options:
          - 0.1
          - 1.0
          - 5.0
          - 10.0
          - 100.0
          

sysvi_vamp_cyc:
    fixed:
      model: sysvi
      prior: vamp
      n_prior_components: 5
      params_opt: sysvi_vamp_cyc_z_distance_cycle_weight_2
      conda_env: sysvi_master
    grid:
      z_distance_cycle_weight:
        type: choice
        options:
          - 2
          - 5 
          - 10
          - 50  


sysvi_vamp_cyc_stable:
    fixed:
      model: sysvi_stable
      prior: vamp
      n_prior_components: 5
      params_opt: sysvi_vamp_cyc_z_distance_cycle_weight_2_stable
      conda_env: sysvi
    grid:
      z_distance_cycle_weight:
        type: choice
        options:
          - 2
          - 5 
          - 10
          - 50  
          